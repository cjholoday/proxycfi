!<arch>
basic_opers.o/  1496243788  1000  1000  100664  6843      `
#<deff>
# as_spec --64 -o basic_opers.o basic_opers.s
# as_spec_no_io --64 
# source_directory /home/colton/research/cdi/tests/build_system/multiple_objs_in_archive
# dependencies basic_opers.c 
# typeinfo basic_opers.c.ftypes
# basic_opers.c:1:5:add _CDIi_Z3addii
# basic_opers.c:5:5:subtract _CDIi_Z8subtractii
# basic_opers.c:9:5:multiply _CDIi_Z8multiplyii
# basic_opers.c:13:5:divide _CDIi_Z6divideii

# assembly
	.file	"basic_opers.c"
	.text
.Ltext0:
	.globl	add
	.type	add, @function
add:
.LFB0:
	.file 1 "basic_opers.c"
	.loc 1 1 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$add, %edi
	call	__cyg_profile_func_enter
	.loc 1 2 0
	movl	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	leal	(%rdx,%rax), %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$add, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 3 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	add, .-add
	.globl	subtract
	.type	subtract, @function
subtract:
.LFB1:
	.loc 1 5 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$subtract, %edi
	call	__cyg_profile_func_enter
	.loc 1 6 0
	movl	-20(%rbp), %eax
	subl	-24(%rbp), %eax
	movl	%eax, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$subtract, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 7 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	subtract, .-subtract
	.globl	multiply
	.type	multiply, @function
multiply:
.LFB2:
	.loc 1 9 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$multiply, %edi
	call	__cyg_profile_func_enter
	.loc 1 10 0
	movl	-20(%rbp), %eax
	imull	-24(%rbp), %eax
	movl	%eax, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$multiply, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 11 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	multiply, .-multiply
	.globl	divide
	.type	divide, @function
divide:
.LFB3:
	.loc 1 13 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$divide, %edi
	call	__cyg_profile_func_enter
	.loc 1 14 0
	movl	-20(%rbp), %eax
	cltd
	idivl	-24(%rbp)
	movl	%eax, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$divide, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 15 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	divide, .-divide
.Letext0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x115
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF3
	.byte	0xc
	.long	.LASF4
	.long	.LASF5
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF0
	.byte	0x1
	.byte	0xd
	.long	0x67
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x67
	.uleb128 0x3
	.string	"x"
	.byte	0x1
	.byte	0xd
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.string	"y"
	.byte	0x1
	.byte	0xd
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.long	.LASF1
	.byte	0x1
	.byte	0x9
	.long	0x67
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0xa8
	.uleb128 0x3
	.string	"x"
	.byte	0x1
	.byte	0x9
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.string	"y"
	.byte	0x1
	.byte	0x9
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2
	.long	.LASF2
	.byte	0x1
	.byte	0x5
	.long	0x67
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0xe2
	.uleb128 0x3
	.string	"x"
	.byte	0x1
	.byte	0x5
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.string	"y"
	.byte	0x1
	.byte	0x5
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x5
	.string	"add"
	.byte	0x1
	.byte	0x1
	.long	0x67
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.string	"x"
	.byte	0x1
	.byte	0x1
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.string	"y"
	.byte	0x1
	.byte	0x1
	.long	0x67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF1:
	.string	"multiply"
.LASF3:
	.string	"GNU C11 6.1.0 -mtune=generic -march=x86-64 -g -fno-jump-tables -finstrument-functions"
.LASF0:
	.string	"divide"
.LASF2:
	.string	"subtract"
.LASF4:
	.string	"basic_opers.c"
.LASF5:
	.string	"/home/colton/research/cdi/tests/build_system/multiple_objs_in_archive"
	.ident	"GCC: (GNU) 6.1.0"
	.section	.note.GNU-stack,"",@progbits

formulas.o/     1496243788  1000  1000  100664  5925      `
#<deff>
# as_spec --64 -o formulas.o formulas.s
# as_spec_no_io --64 
# source_directory /home/colton/research/cdi/tests/build_system/multiple_objs_in_archive
# dependencies formulas.c 
# typeinfo formulas.c.ftypes
# formulas.c:1:5:area_triangle _CDIi_Z13area_triangleii
# formulas.c:5:5:area_square _CDIi_Z11area_squarei
# formulas.c:9:5:area_circle _CDIi_Z11area_circlei

# assembly
	.file	"formulas.c"
	.text
.Ltext0:
	.globl	area_triangle
	.type	area_triangle, @function
area_triangle:
.LFB0:
	.file 1 "formulas.c"
	.loc 1 1 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_triangle, %edi
	call	__cyg_profile_func_enter
	.loc 1 2 0
	movl	-20(%rbp), %eax
	imull	-24(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_triangle, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 3 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	area_triangle, .-area_triangle
	.globl	area_square
	.type	area_square, @function
area_square:
.LFB1:
	.loc 1 5 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_square, %edi
	call	__cyg_profile_func_enter
	.loc 1 6 0
	movl	-20(%rbp), %eax
	imull	-20(%rbp), %eax
	movl	%eax, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_square, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 7 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	area_square, .-area_square
	.globl	area_circle
	.type	area_circle, @function
area_circle:
.LFB2:
	.loc 1 9 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_circle, %edi
	call	__cyg_profile_func_enter
	.loc 1 10 0
	pxor	%xmm0, %xmm0
	cvtsi2sd	-20(%rbp), %xmm0
	movsd	.LC0(%rip), %xmm1
	mulsd	%xmm0, %xmm1
	pxor	%xmm0, %xmm0
	cvtsi2sd	-20(%rbp), %xmm0
	mulsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %ebx
	movq	8(%rbp), %rax
	movq	%rax, %rsi
	movl	$area_circle, %edi
	call	__cyg_profile_func_exit
	movl	%ebx, %eax
	.loc 1 11 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	area_circle, .-area_circle
	.section	.rodata
	.align 8
.LC0:
	.long	1374389535
	.long	1074339512
	.text
.Letext0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0xc3
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF2
	.byte	0xc
	.long	.LASF3
	.long	.LASF4
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF0
	.byte	0x1
	.byte	0x9
	.long	0x5b
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b
	.uleb128 0x3
	.string	"r"
	.byte	0x1
	.byte	0x9
	.long	0x5b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.long	.LASF1
	.byte	0x1
	.byte	0x5
	.long	0x5b
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x90
	.uleb128 0x3
	.string	"s"
	.byte	0x1
	.byte	0x5
	.long	0x5b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x5
	.long	.LASF5
	.byte	0x1
	.byte	0x1
	.long	0x5b
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.string	"b"
	.byte	0x1
	.byte	0x1
	.long	0x5b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.string	"h"
	.byte	0x1
	.byte	0x1
	.long	0x5b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF2:
	.string	"GNU C11 6.1.0 -mtune=generic -march=x86-64 -g -fno-jump-tables -finstrument-functions"
.LASF3:
	.string	"formulas.c"
.LASF0:
	.string	"area_circle"
.LASF1:
	.string	"area_square"
.LASF4:
	.string	"/home/colton/research/cdi/tests/build_system/multiple_objs_in_archive"
.LASF5:
	.string	"area_triangle"
	.ident	"GCC: (GNU) 6.1.0"
	.section	.note.GNU-stack,"",@progbits

